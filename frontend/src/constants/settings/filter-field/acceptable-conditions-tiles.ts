// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import { ACCEPTABLE_CONDITIONS } from './acceptable-conditions';

/**
 * Represents similar tile groups
 *
 * Tile - is a component that contains human
 * readable/understandable information about which
 * acceptable condition has been applied.
 */
export enum TILE_GROUPS {
    EQUAL = 'EQUAL',
    BETWEEN = 'BETWEEN',
    CONTAINS = 'CONTAINS',
    GREATER = 'GREATER',
    GREATER_OR_EQUAL = 'GREATER_OR_EQUAL',
    IN = 'IN',
    IS_TRUE = 'IS_TRUE',
    LESS = 'LESS',
    LESS_OR_EQUAL = 'LESS_OR_EQUAL',
    REGEXP = 'REGEXP',
    NOT_EQUAL = 'NOT_EQUAL',
    NOT_BETWEEN = 'NOT_BETWEEN',
}

export const DISPLAY_TILES_ACCEPTABLE_CONDITIONS_GROUPS = {
    [TILE_GROUPS.EQUAL]: [
        ACCEPTABLE_CONDITIONS.EQUAL,
        ACCEPTABLE_CONDITIONS.EQUAL_ALPH,
    ],
    [TILE_GROUPS.BETWEEN]: [
        ACCEPTABLE_CONDITIONS.BETWEEN,
        ACCEPTABLE_CONDITIONS.BETWEEN_DATE,
        ACCEPTABLE_CONDITIONS.BETWEEN_ALPH,
    ],
    [TILE_GROUPS.CONTAINS]: [
        ACCEPTABLE_CONDITIONS.CONTAINS,
    ],
    [TILE_GROUPS.GREATER]: [
        ACCEPTABLE_CONDITIONS.GREATER,
        ACCEPTABLE_CONDITIONS.GREATER_DATE,
        ACCEPTABLE_CONDITIONS.GREATER_ALPH,
    ],
    [TILE_GROUPS.GREATER_OR_EQUAL]: [
        ACCEPTABLE_CONDITIONS.GREATER_OR_EQUAL,
        ACCEPTABLE_CONDITIONS.GREATER_OR_EQUAL_ALPH,
        ACCEPTABLE_CONDITIONS.GREATER_OR_EQUAL_DATE,
    ],
    [TILE_GROUPS.IN]: [
        ACCEPTABLE_CONDITIONS.IN,
        ACCEPTABLE_CONDITIONS.NOT_IN
    ],
    [TILE_GROUPS.IS_TRUE]: [
        ACCEPTABLE_CONDITIONS.IS_TRUE,
    ],
    [TILE_GROUPS.LESS]: [
        ACCEPTABLE_CONDITIONS.LESS,
        ACCEPTABLE_CONDITIONS.LESS_DATE,
        ACCEPTABLE_CONDITIONS.LESS_ALPH,
    ],
    [TILE_GROUPS.LESS_OR_EQUAL]: [
        ACCEPTABLE_CONDITIONS.LESS_OR_EQUAL,
        ACCEPTABLE_CONDITIONS.LESS_OR_EQUAL_ALPH,
        ACCEPTABLE_CONDITIONS.LESS_OR_EQUAL_DATE,
    ],
    [TILE_GROUPS.NOT_BETWEEN]: [
        ACCEPTABLE_CONDITIONS.NOT_BETWEEN,
        ACCEPTABLE_CONDITIONS.NOT_BETWEEN_ALPH,
        ACCEPTABLE_CONDITIONS.NOT_BETWEEN_DATE,
    ],
    [TILE_GROUPS.NOT_EQUAL]: [
        ACCEPTABLE_CONDITIONS.NOT_EQUAL,
        ACCEPTABLE_CONDITIONS.NOT_EQUAL_ALPH,
    ],
    [TILE_GROUPS.REGEXP]: [
        ACCEPTABLE_CONDITIONS.REGEXP,
    ],
};

/**
 * Enumerates condition names for tiles
 */
export enum CONDITION_TILE_NAMES {
    BETWEEN = 'BETWEEN',
    CONTAINS = 'CONTAINS',
    EQUAL = 'EQUALS',
    GREATER = 'GREATER_THAN',
    GREATER_OR_EQUAL = 'GREATER_THAN_OR_EQUAL_TO',
    IN = 'IN',
    LESS_THAN = 'LESS_THAN',
    LESS_OR_EQUAL = 'LESS_THAN_OR_EQUAL_TO',
    NOT_BETWEEN = 'NOT_BETWEEN',
    NOT_EQUAL = 'NOT_EQUAL',
    REGEXP = 'REGEXP'

}

/**
 * Represents condition tile display names
 */
export const CONDITION_TILE_DISPLAY_NAME = {
    [CONDITION_TILE_NAMES.BETWEEN]: 'between:',
    [CONDITION_TILE_NAMES.CONTAINS]: 'contains:',
    [CONDITION_TILE_NAMES.EQUAL]: 'equals:',
    [CONDITION_TILE_NAMES.GREATER]: 'greater than:',
    [CONDITION_TILE_NAMES.GREATER_OR_EQUAL]: 'greater or equal to:',
    [CONDITION_TILE_NAMES.IN]: 'in:',
    [CONDITION_TILE_NAMES.LESS_THAN]: 'less than:',
    [CONDITION_TILE_NAMES.LESS_OR_EQUAL]: 'less or equal to:',
    [CONDITION_TILE_NAMES.NOT_EQUAL]: 'not equal to:',
    [CONDITION_TILE_NAMES.NOT_BETWEEN]: 'not between:',
    [CONDITION_TILE_NAMES.REGEXP]: 'regexp:'
};
