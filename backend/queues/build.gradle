// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

plugins {
    id 'io.freefair.lombok' version '5.1.1'
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'com.github.jk1.dependency-license-report' version '1.13'
}

group = 'com.griddynamics.msd365fp.manual-review'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations.all {
    resolutionStrategy.force 'com.nimbusds:nimbus-jose-jwt:7.9', 'com.google.guava:guava:25.0-jre'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

ext {
    set('azureVersion', '3.13.0')
    set('appInsightsVersion', '2.6.1')
}

dependencies {
    compile project(path: ':model', configuration: 'default')
    compile project(path: ':cosmos-utilities', configuration: 'default')
    compile project(path: ':azure-graph-client', configuration: 'default')
    compile project(path: ':dfp-auth-starter', configuration: 'default')
    compile project(path: ':durable-ehub-starter', configuration: 'default')

//	  Common
// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-spring-boot2
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.nimbusds:nimbus-jose-jwt:7.9'
    implementation 'com.google.guava:guava:25.0-jre'
    implementation 'org.gavaghan:geodesy:1.1.3'

//    Web
    implementation 'org.modelmapper:modelmapper:2.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-webflux'

//    Azure
    // https://mvnrepository.com/artifact/com.azure.spring/azure-spring-boot-starter
    implementation 'com.azure.spring:azure-spring-boot-starter:3.13.0'
    // https://mvnrepository.com/artifact/com.azure.spring/azure-spring-boot-starter-cosmos
    implementation 'com.azure.spring:azure-spring-boot-starter-cosmos:3.13.0'
    implementation 'com.azure.spring:azure-spring-boot-starter-keyvault-secrets:3.13.0'


//    OpenAPI
    implementation 'org.springdoc:springdoc-openapi-ui:1.3.9'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.3.9'

//    Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.javers:javers-core:5.10.5'

//	Mocking
    //TODO: temporary!
    implementation 'com.github.javafaker:javafaker:1.0.0'

//    Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

bootRun {
    // Allows Intellij IDEA run configuration to pass system properties to the
    // application using `./graldew bootRun` command.
    systemProperties = System.properties
}

task copyForArchiving(type: Copy) {
    dependsOn 'bootJar'
    from "$buildDir/libs", "$buildDir/resources/main", "$buildDir/resources/main/applicationinsights-agent"
    include "*.jar", "ApplicationInsights.json"
    into "$buildDir/toArchive"
    rename 'queues-(.*).jar', 'app.jar'
    rename 'applicationinsights-agent-(.*).jar', 'applicationinsights-agent.jar'
}

task packageDist(type: Zip) {
    dependsOn 'copyForArchiving'
    archiveFileName = "target.zip"
    destinationDirectory = file("$buildDir/dist")

    from "$buildDir/toArchive"
}
